ClassDefinition
name			TdlDefinition
classType   	ABSTRACT
dmdID			2
useWrapperType	EXTENDED
derivedFrom		DSDefinition
isNamedBy		name
must			name
must			dotName
must			definedInTdlModule
may				description
description		The TdlDefinition provides a common base for all dark-matter
 Template Definition Language (TDL) definitions.

ClassDefinition
name 			Section
classType      	STRUCTURAL
dmdID			3
useWrapperType	EXTENDED
derivedFrom		TdlDefinition
isNamedBy		name
must			name
may				singleton
may				contains
may				startsWith
may				endsWith
may				startsWithText
may				endsWithText
may				value
may				hasTemplate
description		A Section represents part of a textual artifact that you want format.
 The artifact could be an XHTML document, an XML document, a piece of code, a form
 letter - whatever. The content of a Section may start with another Section or static
 piece of text and, likewise, end with a Section or static piece of text.
 <p/>
 Sections can also contain other (sub) Sections. 
 <p/>
 Sections can also have named values that can be inserted into Templates. By specifying
 values, you define a simple interface to the template.

OnlyOneOfTheseAttributesAllowedRuleData
ruleName			dmtdlStartsWith
ruleTitle			A Section can only startWith another Section or with a static piece of text. 
applyToClass		Section
onePossibility		startsWith
onePossibility		startsWithText

OnlyOneOfTheseAttributesAllowedRuleData
ruleName			dmtdlEndsWith
ruleTitle			A Section can only endWith another Section or with a static piece of text. 
applyToClass		Section
onePossibility		endsWith
onePossibility		endsWithText

ClassDefinition
name 			Template
classType      	STRUCTURAL
dmdID			4
useWrapperType	EXTENDED
isNamedBy		name
must			name
must			format
description		The Template object provides a mechanism to define an arbitrary set of
 text that allows for the insertion of the named values defined as part of the associated
 Section definition.
 <p/>
 By convention, if a Section requires a Template, the Template is named sectionNameT. For example:
 <pre>
 Section
 name Header
 </pre>
 would have a template as follows:
 <pre>
 Template
 name HeaderT
 </pre>
 Templates are kept separate from the Section definitions so that their content can be
 changed without regenerating code. Templates are loaded 
